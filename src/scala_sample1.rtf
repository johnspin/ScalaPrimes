{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 //creates a range between 1 to 10 inclusive\
val range = 1 to 10\
//creates a range between 1 to 10 exclusive\
val range2 = 1 until 10 \
//from 2 to 10 with jumps of 3\
val range3 = 2 until 10 by 3\
\
1 + 2 is actually: (1).+(2)\
\
var x: Int = 1 + 2\
\
import scala.math._  \
val Tau = Pi*2  \
println(s"Happy $Tau Day")\
\
printf("Now you have %.16f problems.", Math.nextAfter(2.0, 3))  \
\
\
val reverse = "Scala".reverse //reverse a string   \
println(reverse) //alacS  \
\
val cap = "scala".capitalize //make first char caps  \
println(cap) //Scala  \
\
val multi = "Scala!" * 7 //repeat n times   \
println(multi) //Scala!Scala!Scala!Scala!Scala!Scala!Scala!  \
\
val int = "123".toInt //parse as Int  \
println(int)  \
\
//Useful methods on collections   \
\
//filter - keep only items larger than 4   \
val moreThan4 = range.filter(_ > 4)  \
println(moreThan4) //Vector(5, 6, 7, 8, 9, 10)  \
\
//map - transform each item in the collection   \
val doubleIt = range2.map(_ * 2)  \
println(doubleIt) //Vector(2, 4, 6, 8, 10, 12, 14, 16, 18)  \
}